# This file contains Kubernetes YAML files for the most important prow
# components. Don't edit resources in this file. Instead, pull them out into
# their own files.
---
apiVersion: v1
kind: Namespace
metadata:
  name: prow
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-pods
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: prow
  name: plugins
data:
  plugins.yaml: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: prow
  name: config
data:
  config.yaml: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: prow
  name: label-config
data:
  lablels.yaml: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: prow
  name: job-config

---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: prow
  name: "hook"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "hook"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - get
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - update
      - create
      - get
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "hook"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "hook"
subjects:
- kind: ServiceAccount
  name: "hook"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: hook
  labels:
    app: hook
spec:
  selector:
    matchLabels:
      app: hook
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: hook
    spec:
      serviceAccountName: hook
      terminationGracePeriodSeconds: 180
      containers:
      - name: hook
        image: gcr.io/k8s-prow/hook:v20220906-65e79f1345
        imagePullPolicy: Always
        args:
          - --dry-run=false
          - --job-config-path=/etc/job-config
          - --github-endpoint=https://api.github.com
          - --github-token-path=/etc/github/oauth
          - --config-path=/etc/config/config.yaml
        ports:
          - name: http
            containerPort: 8888
        volumeMounts:
        - name: hmac
          mountPath: /etc/webhook
          readOnly: true
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 600
      volumes:
      - name: hmac
        secret:
          secretName: hmac
      - name: oauth
        secret:
          secretName: oauth
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
      - name: plugins
        configMap:
          name: plugins
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: hook
spec:
  selector:
    app: hook
  ports:
  - port: 8888
    nodePort: 30488
  type: NodePort

# hook deployment, service , rbac , role completed 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: plank
  labels:
    app: plank
spec:
  selector:
    matchLabels:
      app: plank
  replicas: 1 # Do not scale up.
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: plank
    spec:
      serviceAccountName: plank
      containers:
      - name: plank
        image: gcr.io/k8s-prow/plank:v20190405-651ad49e6
        args:
          - --dry-run=false
          - --job-config-path=/etc/job-config
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: prow
  name: "plank"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "plank"
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - list
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - get
      - create
      - list
      - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "plank"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "plank"
subjects:
- kind: ServiceAccount
  name: "plank"


# plank deployment, rbac role completed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: sinker
  labels:
    app: sinker
spec:
  selector:
    matchLabels:
      app: sinker
  replicas: 1
  template:
    metadata:
      labels:
        app: sinker
    spec:
      serviceAccountName: sinker
      containers:
      - name: sinker
        image: gcr.io/k8s-prow/sinker:v20190405-651ad49e6
        args:
          - --dry-run=false
          - --job-config-path=/etc/job-config
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: prow
  name: "sinker"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "sinker"
rules:
  - apiGroups:
    - "prow.k8s.io"
    resources:
    - prowjobs
    verbs:
    - delete
    - list
    - watch
    - get
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    resourceNames:
    - prow-sinker-leaderlock
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    resourceNames:
    - prow-sinker-leaderlock
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    verbs:
    - create
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - list
      - watch
      - get
      - patch

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "sinker"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "sinker"
subjects:
- kind: ServiceAccount
  name: "sinker"

# sinker deployment , svc , role, rbac completed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: deck
  labels:
    app: deck
spec:
  selector:
    matchLabels:
      app: deck
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: deck
    spec:
      serviceAccountName: deck
      terminationGracePeriodSeconds: 30
      containers:
      - name: deck
        image: gcr.io/k8s-prow/deck:v20220908-f78f19e6a6
        args:
        - --tide-url=http://tide/
        - --hook-url=http://hook:8888/plugin-help
        - --redirect-http-to=prow.tools.perfteam.sapcloud.io/
        - --config-path=/etc/config/config.yaml
        - --job-config-path=/etc/job-config
        - --github-endpoint=https://api.github.com
        - --plugin-config=/etc/plugins/plugins.yaml
        - --gcs-credentials-file=/etc/github/service-account.json
        ports:
          - name: http
            containerPort: 8080
        volumeMounts:
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
        - name: gcs-creds
          mountPath: /etc/github
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 600
      volumes:
      - name: oauth
        secret:
          secretName: oauth
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
      - name: plugins
        configMap:
          name: plugins
      - name: gcs-creds
        secret:
          secretName: gcs-sa
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: deck
spec:
  selector:
    app: deck
  ports:
  - name: main
    port: 80
    targetPort: 8080
  - name: metrics
    port: 9090
  type: NodePort

  
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: prow
  name: "deck"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "deck"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "deck"
subjects:
- kind: ServiceAccount
  name: "deck"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "deck"
rules:
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - get
      - list

# deck complete
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: horologium
  labels:
    app: horologium
spec:
  selector:
    matchLabels:
      app: horologium
  replicas: 1 # Do not scale up.
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: horologium
    spec:
      serviceAccountName: horologium
      terminationGracePeriodSeconds: 30
      containers:
      - name: horologium
        image: gcr.io/k8s-prow/horologium:v20190405-651ad49e6
        args:
          - --job-config-path=/etc/job-config
          - --dry-run=false
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
---

kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: prow
  name: "horologium"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "horologium"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - list
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "horologium"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "horologium"
subjects:
- kind: ServiceAccount
  name: "horologium"

# horologium completed
---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: tide
  labels:
    app: tide
spec:
  selector:
    matchLabels:
      app: tide
  replicas: 1 # Do not scale up.
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: tide
    spec:
      serviceAccountName: tide
      containers:
      - name: tide
        image: gcr.io/k8s-prow/tide:v20190405-651ad49e6
        args:
          - --dry-run=false
          - --job-config-path=/etc/job-config
        ports:
          - name: http
            containerPort: 8888
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: tide
spec:
  selector:
    app: tide
  ports:
  - port: 80
    targetPort: 8888
  type: NodePort

---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: prow
  name: "tide"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "tide"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - list
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "tide"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "tide"
subjects:
- kind: ServiceAccount
  name: "tide"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert.gardener.cloud/issuer: perf-domain
    cert.gardener.cloud/purpose: managed
  namespace: prow
  name: ing
spec:
  defaultBackend:
    # specify the default backend for `ingress-gce` (https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#default_backend)
    service:
      name: deck
      port:
        number: 80
  rules:
  - host: prow.tools.perfteam.sapcloud.io
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: deck
            port:
              number: 80
      - path: /hook
        pathType: ImplementationSpecific
        backend:
          service:
            name: hook
            port:
              number: 8888
  tls:
  - hosts:
    - prow.tools.perfteam.sapcloud.io
    secretName: cert-tls2

