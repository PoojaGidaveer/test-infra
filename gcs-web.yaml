apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: gcsweb
  labels:
    app: gcsweb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gcsweb
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gcsweb
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: gcsweb
          image: k8s.gcr.io/gcsweb:v1.1.0
          args:
            - -upgrade-proxied-http-to-https
            - -b=kyma-prow-logs
            - -p=8080
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 2
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 2
            failureThreshold: 2
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: gcsweb
  labels:
    app: gcsweb
spec:
  selector:
    app: gcsweb
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: prow
  name: gcsweb-tls-ing
  annotations:
    cert.gardener.cloud/issuer: perf-domain
    cert.gardener.cloud/purpose: managed
spec:
  rules:
  - host: gcsweb.tools.perfteam.sapcloud.io
    http:
      paths:
        - path: /*
          pathType: ImplementationSpecific
          backend:
            service:
              name: gcsweb
              port:
                number: 80
  tls:
  - hosts:
    - gcsweb.tools.perfteam.sapcloud.io
    secretName: cert-tls-gcs